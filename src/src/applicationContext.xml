<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<context:component-scan base-package="com.wxd.note5.util" />
	<context:component-scan base-package="com.wxd.note5.dao" />
	<context:component-scan base-package="com.wxd.note5.service" />

	
	
	 <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--     使用location属性定义单个配置文件 -->
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
       </bean>
	
	<!-- 数据源配置,在生产环境使用应用服务器连接池 -->
 	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="5" />
		<property name="maxWait" value="5" />
	</bean>  -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >           
    		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
</bean>  
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" depends-on="dataSource">
		<constructor-arg type="DataSource" ref="dataSource" />
	</bean>

	<!-- 定义标签驱动的事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
 <!-- 根据dataSource和ibatis的映射配置文件创建sqlMapClient -->
 	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
 		<property name="configLocation">
 			<value>classpath:sql-map-config.xml</value>
 		</property>
 		<property name="dataSource" ref="dataSource" />
 	</bean>
 
 <!-- 根据sqlMapClient创建一个sqlMapClientTemplate模板类 -->
 	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
 		<property name="sqlMapClient">
 			<ref bean="sqlMapClient" />
 		</property>
 	</bean>

</beans>
